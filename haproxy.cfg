#
# Global settings for HA-Proxy
global
	# to have these messages end up in /var/log/haproxy.log you will
	# need to:
	#
	# 1) configure syslog to accept network log events.  This is done
	#    by adding the '-r' option to the SYSLOGD_OPTIONS in
	#    /etc/sysconfig/syslog
	#
	# 2) configure local2 events to go to the /var/log/haproxy.log
	#   file. A line like the following can be added to
	#   /etc/sysconfig/syslog
	#
	#    local2.*                       /var/log/haproxy.log
	#
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

#
# Defaults settings for all sections, unless overridden
defaults
	log	global
	mode	http
	option	httplog
	no option	dontlognull

	# disconnect slow handshake clients early, protect from
	# resources exhaustion attacks
	timeout check			10s
	timeout queue			60s
        timeout connect 		15s
        timeout client  		60s
        timeout server  		150s
	timeout http-request		15s
	timeout http-keep-alive		15s
	maxconn				100000

	balance roundrobin                      # The load balancing method to use
	option httpclose                        # Force to close http connection
    	option nolinger                        # Force to system remove socket's pending data on close
    	option http-server-close                # Preserve client persistent connections
    	option forwardfor except 127.0.0.1      # option to see RealIp in apache log
    	option httpchk HEAD /check.txt HTTP/1.0 # A complete HTTP request is sent once the TCP conn is established
    	cookie SERVERID insert indirect nocache # Insert a cookie to record the real server

	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend Public-HTTP
	bind *:80
	default_backend webservers_balanced

	# ~~~ DDoS protection ~~~
	# HAproxy tracks client IPs into a global stick table. Each IP is
	# stored for a limited amount of time, with several counters attached
	# to it. When a new connection comes in, the stick table is evaluated
	# to verify that the new connection from this client is allowed to
	# continue.

	# Stick Table Definitions
	#  - conn_cur: count active connections
	#  - conn_rate(10s): average incoming connection rate over 10 seconds
	#  - http_req_rate(10s): Monitors the number of request sent by an IP over a period of 10 seconds
	#  - http_err_rate(10s): Monitors the number of errors generated by an IP over a period of 10 seconds
	#stick-table type ip size 500k expire 90s store  gpc0,conn_cur,conn_rate(10s),http_req_rate(10s),http_err_rate(10s)

	# Blacklist: Deny access to some IPs before anything else is checked
	tcp-request content reject if { src -f /etc/haproxy/blacklist.lst }

	# Shut the new connection as long as the client has already 10 opened 
  	#tcp-request content reject if { src_conn_cur ge 10 }

	# Shut the new connection as long as the client has conn rate greater than 10 
	#tcp-request content reject if { src_conn_rate ge 10 }

	# Shut the new connection depens on the http request rate
	#tcp-request content reject if { src_http_req_rate ge 10 }

 	#tcp-request content reject if { src_get_gpc0 gt 0 }

	# Enable tracking of counters for src ip in the default stick-table
  	#tcp-request content track-sc1 src

  	# Whitelist: Allow clean known IPs to bypass the filter
  	http-request allow if { src -f /etc/haproxy/whitelist.lst }

	acl host_cvg src        155.210.136.37 
	acl ciencia_es hdr_dom(host) -i cienciaremix.es
	acl ciencia_eu hdr_dom(host) -i cienciaremix.eu
	acl testito hdr_dom(host) -i testito.es
	#acl ibercivis2 hdr_dom(host) -i ibercivis2.es
	
        use_backend webservers_test if host_cvg ciencia_es
        use_backend webservers_test if testito
	#use_backend webservers_test  if { hdr_dom(host) -i ibercivis2.es }

	# Rules	
	#use_backend webservers_thinkhub  if { hdr_dom(host) -i thinkhub.ibercivis.es }
	#use_backend webservers_cienciaremix if { hdr_dom(host) -i cienciaremix.es } 
	#use_backend webservers_cienciaremix if { hdr_dom(host) -i cienciaremix.eu } 
	#use_backend webservers_multisite if { hdr_dom(host) -i multisite.ibercivis.es } 

	use_backend webservers_thelab  if { hdr_dom(host) -i thelab.ibercivis.es }
	use_backend webservers_eficienciaencasa  if { hdr_dom(host) -i eficienciaencasa.ibercivis.es }
	#use_backend webservers_comuni if { hdr(host) -m beg comunicacioncientifica }

	use_backend webservers_socientize  if { hdr_dom(host) -i  socientize.eu }
	use_backend webservers_socientize  if { hdr_dom(host) -i  socientize.com }

	use_backend webservers_aqua  if { hdr_dom(host) -i aqua.ibercivis.es }
	use_backend webservers_odour if { hdr_dom(host) -i odour.ibercivis.es }
	use_backend webservers_cartodb if { hdr_dom(host) -i cartodb.ibercivis.es }

    	use_backend webservers_bajadaboinc  if { hdr_dom(host) -i bajada.ibercivis.es }
    	use_backend webservers_bajadaboinc  if { hdr_dom(host) -i bajada.ibercivis.eu }
    	use_backend webservers_bajadaboinc  if { hdr_dom(host) -i bajada.ibercivis.net }
    	use_backend webservers_bajadaboinc  if { hdr_dom(host) -i bajada.ibercivis.org }
    	use_backend webservers_bajadaboinc  if { hdr_dom(host) -i bajada.ibercivis.com }


#################################################################
#								#
#                      Back-ends				#
#								#
#################################################################
backend webservers_balanced
	fullconn 10000

	# Stats Page	
	stats enable
	stats uri /monitor
	stats hide-version
	stats show-node
	stats show-legends
	stats refresh 10s
	stats auth carlos:carlos

	server web_100 172.20.0.100:80 cookie web_100 check
    	server web_101 172.20.0.101:80 cookie web_101 check

backend webservers_test
    	server web_text3 172.20.0.100:80 cookie web_test3 check
#	server web_test1 172.20.0.101:80 cookie web_test1 check backup

#backend webservers_multisite
#    	server web_100b 172.20.0.100:80 cookie web_100b check

#backend webservers_thinkhub
#    	server web_100 172.20.0.100:80 cookie web_100 check

#backend webservers_cienciaremix
#    	server web_110a 172.20.0.100:80 cookie web_110a check

backend webservers_bajadaboinc
    	server web_10 155.210.135.10:80 cookie web_10 check

backend webservers_socientize
	server web_161 172.20.0.161:80 cookie web_161 check

backend webservers_eficienciaencasa
    	server web_186 172.20.0.86:80 cookie web_186 check

backend webservers_thelab
    	server web_163 172.20.0.163:80 cookie web_163 check

backend webservers_odour
    	server web_105 172.20.0.105:80 cookie web_105 check

backend webservers_aqua
    	server web_104 172.20.0.104:80 cookie web_104 check

backend webservers_cartodb
    	server web_169 172.20.0.169:80 cookie web_169 check

#backend webservers_test
#    	server web_103 172.20.0.103:80 cookie web_104 check
