#
# Global settings for HA-Proxy
global
	# to have these messages end up in /var/log/haproxy.log you will
	# need to:
	#
	# 1) configure syslog to accept network log events.  This is done
	#    by adding the '-r' option to the SYSLOGD_OPTIONS in
	#    /etc/sysconfig/syslog
	#
	# 2) configure local2 events to go to the /var/log/haproxy.log
	#   file. A line like the following can be added to
	#   /etc/sysconfig/syslog
	#
	#    local2.*                       /var/log/haproxy.log
	#
	log         	127.0.0.1 local2
	chroot 		/var/lib/haproxy
	user 		haproxy
	group 		haproxy
	daemon

	# turn on stats unix socket
	stats socket /var/run/haproxy.stats mode 600 level admin
	stats timeout 2m

#
# Defaults settings for all sections, unless overridden
defaults
	mode http
	log global
	no option dontlognull
	option splice-auto
	option http-keep-alive
	option redispatch
	option contstats
	retries 3

	# disconnect slow handshake clients early, protect from
	# resources exhaustion attacks
	timeout check           10s
	timeout queue           60s
	timeout connect         15s
	timeout client          60s
	timeout server          150s
	timeout http-request    15s
	timeout http-keep-alive 15s
	maxconn                 100000

    	balance roundrobin                      # The load balancing method to use
	option httpclose                        # Force to close http connection
    	#option nolinger                        # Force to system remove socket's pending data on close
    	option http-server-close                # Preserve client persistent connections
    	option forwardfor except 127.0.0.1      # option to see RealIp in apache log
    	option httpchk HEAD /check.txt HTTP/1.0 # A complete HTTP request is sent once the TCP conn is established
    	cookie SERVERID insert indirect nocache # Insert a cookie to record the real server

	# Errors list
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#################################################################
#								#
#                      Front-ends				#
#								#
#################################################################
frontend Public-HTTP
	bind *:80
	default_backend webservers

	# ~~~ DDoS protection ~~~
	# HAproxy tracks client IPs into a global stick table. Each IP is
	# stored for a limited amount of time, with several counters attached
	# to it. When a new connection comes in, the stick table is evaluated
	# to verify that the new connection from this client is allowed to
	# continue.

	# Stick Table Definitions
	#  - conn_cur: count active connections
	#  - conn_rate(10s): average incoming connection rate over 10 seconds
	#  - http_req_rate(10s): Monitors the number of request sent by an IP over a period of 10 seconds
	#  - http_err_rate(10s): Monitors the number of errors generated by an IP over a period of 10 seconds
	stick-table type ip size 500k expire 90s store  gpc0,conn_cur,conn_rate(10s),http_req_rate(10s),http_err_rate(10s)

	# Blacklist: Deny access to some IPs before anything else is checked
	tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  	# Whitelist: Allow clean known IPs to bypass the filter
  	tcp-request connection accept if { src -f /etc/haproxy/whitelist.lst }

	# Shut the new connection as long as the client has already 10 opened 
  	tcp-request connection reject if { src_conn_cur ge 10 }

	# Shut the new connection as long as the client has conn rate greater than 10 
	tcp-request connection reject if { src_conn_rate ge 10 }

	# Shut the new connection depens on the http request rate
	tcp-request connection reject if { src_http_req_rate ge 10 }

 	tcp-request connection reject if { src_get_gpc0 gt 0 }

	# Enable tracking of counters for src ip in the default stick-table
  	tcp-request connection track-sc1 src
	
        # Rules	
	use_backend webservers_saving if { hdr_end(host) -i savingenergy  }
	use_backend webservers_web100 if { hdr_end(host) -i thinkhub.ibercivis.es }
	use_backend webservers_web100 if { hdr_end(host) -i cienciaremix.es }
	use_backend webservers_thelab if { hdr_end(host) -i thelab.ibercivis.es }
	use_backend webservers_eficie if { hdr(host) -m beg eficienciaencasa }
	#use_backend webservers_comuni if { hdr(host) -m beg comunicacioncientifica }

	use_backend webservers_socien if { hdr_end(host) -i  socientize.eu }
	use_backend webservers_socien if { hdr_end(host) -i  socientize.com }

	use_backend webservers_aquaib if { hdr_end(host) -i aqua.ibercivis.es }
	use_backend webservers_odourb if { hdr_end(host) -i odour.ibercivis.es }

    	use_backend webservers_bajada if { hdr_end(host) -i bajada.ibercivis.es }
    	use_backend webservers_bajada if { hdr_end(host) -i bajada.ibercivis.eu }
    	use_backend webservers_bajada if { hdr_end(host) -i bajada.ibercivis.net }
    	use_backend webservers_bajada if { hdr_end(host) -i bajada.ibercivis.org }

    	#acl host_bifi src       155.210.135.0/24 155.210.136.0/24   # To
    	#acl host_cvg src        155.210.136.37

	# ~~~ Logging ~~~
	# passed to the backend
	unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
	unique-id-header X-Unique-ID

#################################################################
#								#
#                      Back-ends				#
#								#
#################################################################
backend webservers_web100
    	server web_100  172.20.0.100:80 cookie web_100 check

backend webservers_eficie
    	server web_186 172.20.0.86:80 cookie web_186 check

backend webservers_saving
    	server web_185 172.20.0.85:80 cookie web_185 check

#backend webservers_admin
#    	server webadmin01 172.20.0.100:80 cookie webadmin01

backend webservers_thelab
    	server web_163 172.20.0.163:80 cookie web_163 check

backend webservers_odourb
    	server web_105 172.20.0.105:80 cookie web_105 check

backend webservers_aquaib
    	server weba_104 172.20.0.104:80 cookie web_104 check

backend webservers_bajada
    	server web_10 155.210.135.10:80 cookie web_10 check

backend webservers_socien
	server web_161 172.20.0.161:80 cookie web_161 check

backend webservers
	fullconn 10000

	# Stats Page	
	stats enable
	stats uri /monitor
	stats hide-version
	stats show-node
	stats show-legends
	stats refresh 2s
	stats auth carlos:carlos

	server web_100 172.20.0.100:80 cookie web_101 check
    	server web_101 172.20.0.101:80 cookie web_101 check

